{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/adercidepaulajunior/Udemy/blog/blog_next/src/components/Pagination/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { Container, NextLink, PreviousLink } from './styled';\nexport var Pagination = function Pagination(_ref) {\n  var nextPage = _ref.nextPage,\n      numberOfPosts = _ref.numberOfPosts,\n      category = _ref.category,\n      previousPage = _ref.previousPage,\n      postsPerPage = _ref.postsPerPage;\n  var categoryName = category || '';\n  var nextLink = \"/post/page/\".concat(nextPage, \"/\").concat(categoryName);\n  var previousLink = \"/post/page/\".concat(previousPage, \"/\").concat(categoryName);\n  var hasNextPage = nextPage * postsPerPage < postsPerPage + numberOfPosts;\n  var hasPreviousPage = previousPage >= 1;\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, hasPreviousPage && __jsx(PreviousLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: previousLink,\n    href: \"/post/page/[...param]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Previous\"))), hasNextPage && __jsx(NextLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: nextLink,\n    href: \"/post/page/[...param]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Next\"))));\n};\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/adercidepaulajunior/Udemy/blog/blog_next/src/components/Pagination/index.tsx"],"names":["Link","Container","NextLink","PreviousLink","Pagination","nextPage","numberOfPosts","category","previousPage","postsPerPage","categoryName","nextLink","previousLink","hasNextPage","hasPreviousPage"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,YAA9B,QAAkD,UAAlD;AAIA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAMH;AAAA,MALrBC,QAKqB,QALrBA,QAKqB;AAAA,MAJrBC,aAIqB,QAJrBA,aAIqB;AAAA,MAHrBC,QAGqB,QAHrBA,QAGqB;AAAA,MAFrBC,YAEqB,QAFrBA,YAEqB;AAAA,MADrBC,YACqB,QADrBA,YACqB;AACrB,MAAMC,YAAY,GAAGH,QAAQ,IAAI,EAAjC;AACA,MAAMI,QAAQ,wBAAiBN,QAAjB,cAA6BK,YAA7B,CAAd;AACA,MAAME,YAAY,wBAAiBJ,YAAjB,cAAiCE,YAAjC,CAAlB;AACA,MAAMG,WAAW,GAAGR,QAAQ,GAAGI,YAAX,GAA0BA,YAAY,GAAGH,aAA7D;AACA,MAAMQ,eAAe,GAAGN,YAAY,IAAI,CAAxC;AACA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,eAAe,IACd,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,YAAV;AAAwB,IAAA,IAAI,EAAC,uBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CAFJ,EAQGC,WAAW,IACV,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,QAAV;AAAoB,IAAA,IAAI,EAAC,uBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CATJ,CADF;AAkBD,CA9BM;KAAMP,U","sourcesContent":["import Link from 'next/link';\nimport { PaginationData } from '../../domain/posts/pagination';\nimport { Container, NextLink, PreviousLink } from './styled';\n\nexport type PaginationProps = PaginationData;\n\nexport const Pagination = ({\n  nextPage,\n  numberOfPosts,\n  category,\n  previousPage,\n  postsPerPage,\n}: PaginationProps) => {\n  const categoryName = category || '';\n  const nextLink = `/post/page/${nextPage}/${categoryName}`;\n  const previousLink = `/post/page/${previousPage}/${categoryName}`;\n  const hasNextPage = nextPage * postsPerPage < postsPerPage + numberOfPosts;\n  const hasPreviousPage = previousPage >= 1;\n  return (\n    <Container>\n      {hasPreviousPage && (\n        <PreviousLink>\n          <Link as={previousLink} href=\"/post/page/[...param]\">\n            <a>Previous</a>\n          </Link>\n        </PreviousLink>\n      )}\n      {hasNextPage && (\n        <NextLink>\n          <Link as={nextLink} href=\"/post/page/[...param]\">\n            <a>Next</a>\n          </Link>\n        </NextLink>\n      )}\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}