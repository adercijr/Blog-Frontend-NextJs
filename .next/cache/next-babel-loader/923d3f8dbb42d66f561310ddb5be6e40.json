{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Error from 'next/error';\nimport { Post } from '../../containers/Post';\nimport { countAllPosts } from '../../data/posts/count-all-posts';\nimport { getAllPosts } from '../../data/posts/get-all-posts';\nimport { getPost } from '../../data/posts/get-post';\n\nconst DynamicPost = ({\n  post\n}) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return __jsx(\"div\", null, \"P\\xE1gina ainda carregando, por favor aguarde...\");\n  }\n\n  if (!(post === null || post === void 0 ? void 0 : post.title)) {\n    return __jsx(Error, {\n      statusCode: 404\n    });\n  }\n\n  return __jsx(Post, {\n    post: post\n  });\n};\n\nexport default DynamicPost;\nexport const getStaticPaths = async () => {\n  const numberOfPosts = await countAllPosts();\n  const posts = await getAllPosts(`_limit=${numberOfPosts}`);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: true\n  };\n};\nexport const getStaticProps = async ctx => {\n  const posts = await getPost(ctx.params.slug);\n  const post = posts.length > 0 ? posts[0] : {};\n  return {\n    props: {\n      post: post\n    },\n    revalidate: 5\n  };\n};","map":null,"metadata":{},"sourceType":"module"}