{"ast":null,"code":"var _jsxFileName = \"/Users/adercidepaulajunior/Udemy/blog-clone/src/pages/post/page/[...param].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport HomePage from '../../../containers/HomePage';\nimport { countAllPosts } from '../../../data/posts/count-all-posts';\nimport { getAllPosts } from '../../../data/posts/get-all-posts';\nexport default function Page({\n  posts,\n  category,\n  pagination\n}) {\n  const router = useRouter();\n  if (router.isFallback) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  }, \"Carregando...\");\n  if (!posts.length) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  }, \"P\\xE1gina n\\xE3o encontrada...\");\n  return __jsx(HomePage, {\n    posts: posts,\n    category: category,\n    pagination: pagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  });\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: true\n  };\n};\nexport const getStaticProps = async ctx => {\n  const page = Number(ctx.params.param[0]);\n  const category = ctx.params.param[1] || '';\n  const postsPerPage = 9;\n  const startFrom = (page - 1) * postsPerPage;\n  const nextPage = page + 1;\n  const previousPage = page - 1;\n  const categoryQuery = category ? `&category.name_contains=${category}` : '';\n  const urlQuery = `_sort=id:desc&_start=${startFrom}&_limit=${postsPerPage}${categoryQuery}`;\n  const posts = await getAllPosts(urlQuery);\n  const numberOfPosts = Number(await countAllPosts(categoryQuery));\n  const pagination = {\n    nextPage,\n    numberOfPosts,\n    postsPerPage,\n    previousPage,\n    category\n  };\n  return {\n    props: {\n      posts,\n      pagination,\n      category\n    } // revalidate: 600,  // Eu não preciso atualizar este blog (por isso comentei)\n\n  };\n};","map":{"version":3,"sources":["/Users/adercidepaulajunior/Udemy/blog-clone/src/pages/post/page/[...param].tsx"],"names":["useRouter","HomePage","countAllPosts","getAllPosts","Page","posts","category","pagination","router","isFallback","length","getStaticPaths","paths","fallback","getStaticProps","ctx","page","Number","params","param","postsPerPage","startFrom","nextPage","previousPage","categoryQuery","urlQuery","numberOfPosts","props"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,WAAT,QAA4B,mCAA5B;AAUA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAd,EAA0D;AACvE,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,MAAIQ,MAAM,CAACC,UAAX,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACvB,MAAI,CAACJ,KAAK,CAACK,MAAX,EAAmB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AAEnB,SAAO,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAwB,IAAA,QAAQ,EAAEC,QAAlC;AAA4C,IAAA,UAAU,EAAEC,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;AAED,OAAO,MAAMI,cAA8B,GAAG,YAAY;AACxD,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAMC,IAAI,GAAGC,MAAM,CAACF,GAAG,CAACG,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAD,CAAnB;AACA,QAAMb,QAAQ,GAAGS,GAAG,CAACG,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,KAAuB,EAAxC;AACA,QAAMC,YAAY,GAAG,CAArB;AACA,QAAMC,SAAS,GAAG,CAACL,IAAI,GAAG,CAAR,IAAaI,YAA/B;AAEA,QAAME,QAAQ,GAAGN,IAAI,GAAG,CAAxB;AACA,QAAMO,YAAY,GAAGP,IAAI,GAAG,CAA5B;AAEA,QAAMQ,aAAa,GAAGlB,QAAQ,GAAI,2BAA0BA,QAAS,EAAvC,GAA2C,EAAzE;AACA,QAAMmB,QAAQ,GAAI,wBAAuBJ,SAAU,WAAUD,YAAa,GAAEI,aAAc,EAA1F;AACA,QAAMnB,KAAK,GAAG,MAAMF,WAAW,CAACsB,QAAD,CAA/B;AAEA,QAAMC,aAAa,GAAGT,MAAM,CAAC,MAAMf,aAAa,CAACsB,aAAD,CAApB,CAA5B;AACA,QAAMjB,UAA0B,GAAG;AACjCe,IAAAA,QADiC;AAEjCI,IAAAA,aAFiC;AAGjCN,IAAAA,YAHiC;AAIjCG,IAAAA,YAJiC;AAKjCjB,IAAAA;AALiC,GAAnC;AAQA,SAAO;AACLqB,IAAAA,KAAK,EAAE;AAAEtB,MAAAA,KAAF;AAASE,MAAAA,UAAT;AAAqBD,MAAAA;AAArB,KADF,CAEL;;AAFK,GAAP;AAID,CA1BM","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\nimport { useRouter } from 'next/router';\nimport HomePage from '../../../containers/HomePage';\nimport { countAllPosts } from '../../../data/posts/count-all-posts';\nimport { getAllPosts } from '../../../data/posts/get-all-posts';\nimport { PaginationData } from '../../../domain/posts/pagination';\nimport { PostData } from '../../../domain/posts/post';\n\nexport type PageProps = {\n  posts: PostData[];\n  category?: string;\n  pagination: PaginationData;\n};\n\nexport default function Page({ posts, category, pagination }: PageProps) {\n  const router = useRouter();\n\n  if (router.isFallback) return <div>Carregando...</div>;\n  if (!posts.length) return <div>Página não encontrada...</div>;\n\n  return <HomePage posts={posts} category={category} pagination={pagination} />;\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: true,\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const page = Number(ctx.params.param[0]);\n  const category = ctx.params.param[1] || '';\n  const postsPerPage = 9;\n  const startFrom = (page - 1) * postsPerPage;\n\n  const nextPage = page + 1;\n  const previousPage = page - 1;\n\n  const categoryQuery = category ? `&category.name_contains=${category}` : '';\n  const urlQuery = `_sort=id:desc&_start=${startFrom}&_limit=${postsPerPage}${categoryQuery}`;\n  const posts = await getAllPosts(urlQuery);\n\n  const numberOfPosts = Number(await countAllPosts(categoryQuery));\n  const pagination: PaginationData = {\n    nextPage,\n    numberOfPosts,\n    postsPerPage,\n    previousPage,\n    category,\n  };\n\n  return {\n    props: { posts, pagination, category },\n    // revalidate: 600,  // Eu não preciso atualizar este blog (por isso comentei)\n  };\n};\n"]},"metadata":{},"sourceType":"module"}