{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/adercidepaulajunior/Udemy/blog/blog_next/src/containers/Post/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { Comments } from '../../components/Comments';\nimport { Footer } from '../../components/Footer';\nimport { Header } from '../../components/Header';\nimport { Heading } from '../../components/Heading';\nimport { MainContainer } from '../../components/MainContainer';\nimport { PostContainer } from '../../components/PostContainer';\nimport PostCover from '../../components/PostCover';\nimport { PostDetails } from '../../components/PostDetails';\nimport { SITE_NAME } from '../../config/app-config';\nimport { removeHtml } from '../../utils/remove-html';\nimport Container from './styled';\nexport var Post = function Post(_ref) {\n  var post = _ref.post;\n\n  function coverUrl() {\n    if (post.cover.formats.large) {\n      return post.cover.formats.large.url;\n    } else if (post.cover.formats.medium) {\n      return post.cover.formats.medium.url;\n    } else {\n      return post.cover.formats.small.url;\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, post.title, \" - \", SITE_NAME), __jsx(\"meta\", {\n    name: \"description\",\n    content: removeHtml(post.content).slice(0, 150),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(MainContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, post.title), __jsx(PostCover, {\n    alt: post.title,\n    coverUrl: coverUrl(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(PostDetails, {\n    date: post.created_at,\n    author: post.author.name,\n    category: post.category.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(PostContainer, {\n    content: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))), __jsx(Comments, {\n    slug: post.slug,\n    title: post.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n};\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/adercidepaulajunior/Udemy/blog/blog_next/src/containers/Post/index.tsx"],"names":["Head","Comments","Footer","Header","Heading","MainContainer","PostContainer","PostCover","PostDetails","SITE_NAME","removeHtml","Container","Post","post","coverUrl","cover","formats","large","url","medium","small","title","content","slice","created_at","author","name","category","slug"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,OAAQC,SAAR,MAAuB,4BAAvB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAMA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAyB;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;;AAE3C,WAASC,QAAT,GAAmB;AACjB,QAAGD,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBC,KAAtB,EAA4B;AAC1B,aAAOJ,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,CAAyBC,GAAhC;AACD,KAFD,MAEO,IAAGL,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBG,MAAtB,EAA6B;AAClC,aAAON,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBG,MAAnB,CAA0BD,GAAjC;AACD,KAFM,MAEA;AACL,aAAOL,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBI,KAAnB,CAAyBF,GAAhC;AACD;AACF;;AAED,SACE,4BACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACQ,KADR,SACkBZ,SADlB,CADF,EAIE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EAAEC,UAAU,CAACG,IAAI,CAACS,OAAN,CAAV,CAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,GAAlC,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADA,EAUA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,EAWA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUV,IAAI,CAACQ,KAAf,CADF,EAEE,MAAC,SAAD;AACE,IAAA,GAAG,EAAER,IAAI,CAACQ,KADZ;AAEE,IAAA,QAAQ,EAAEP,QAAQ,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,MAAC,WAAD;AACE,IAAA,IAAI,EAAED,IAAI,CAACW,UADb;AAEE,IAAA,MAAM,EAAEX,IAAI,CAACY,MAAL,CAAYC,IAFtB;AAGE,IAAA,QAAQ,EAAEb,IAAI,CAACc,QAAL,CAAcD,IAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEb,IAAI,CAACS,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADF,EAgBE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAET,IAAI,CAACe,IAArB;AAA2B,IAAA,KAAK,EAAEf,IAAI,CAACQ,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAXA,EA6BA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BA,CADF;AAiCD,CA7CM;KAAMT,I","sourcesContent":["import Head from 'next/head';\nimport { Comments } from '../../components/Comments';\nimport { Footer } from '../../components/Footer';\nimport { Header } from '../../components/Header';\nimport { Heading } from '../../components/Heading';\nimport { MainContainer } from '../../components/MainContainer';\nimport { PostContainer } from '../../components/PostContainer';\nimport  PostCover from '../../components/PostCover';\nimport { PostDetails } from '../../components/PostDetails';\nimport { SITE_NAME } from '../../config/app-config';\nimport { PostData } from '../../domain/posts/post';\nimport { removeHtml } from '../../utils/remove-html';\nimport Container from './styled'\n\nexport type PostProps = {\n  post: PostData;\n};\n\nexport const Post = ({ post }: PostProps) => {\n\n  function coverUrl(){\n    if(post.cover.formats.large){\n      return post.cover.formats.large.url\n    } else if(post.cover.formats.medium){\n      return post.cover.formats.medium.url\n    } else {\n      return post.cover.formats.small.url\n    }\n  }\n\n  return (\n    <>\n    <Head>\n      <title>\n        {post.title} - {SITE_NAME}\n      </title>\n      <meta\n        name=\"description\"\n        content={removeHtml(post.content).slice(0, 150)}\n      />\n    </Head>\n    <Header />\n    <Container>\n      <MainContainer>\n        <>\n          <Heading>{post.title}</Heading>\n          <PostCover\n            alt={post.title}\n            coverUrl={coverUrl()}\n          />\n          <PostDetails\n            date={post.created_at}\n            author={post.author.name}\n            category={post.category.name}\n          />\n          <PostContainer content={post.content} />\n        </>\n      </MainContainer>\n      <Comments slug={post.slug} title={post.title} />\n    </Container>\n    <Footer />\n  </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}