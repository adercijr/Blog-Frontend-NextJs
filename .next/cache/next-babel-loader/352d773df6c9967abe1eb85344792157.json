{"ast":null,"code":"var _jsxFileName = \"/Users/adercidepaulajunior/Udemy/blog-clone/src/pages/post/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Error from 'next/error';\nimport { Post } from '../../containers/Post';\nimport { countAllPosts } from '../../data/posts/count-all-posts';\nimport { getAllPosts } from '../../data/posts/get-all-posts';\nimport { getPost } from '../../data/posts/get-post';\n\nconst DynamicPost = ({\n  post\n}) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"P\\xE1gina ainda carregando, por favor aguarde...\");\n  }\n\n  if (!(post === null || post === void 0 ? void 0 : post.title)) {\n    return __jsx(Error, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default DynamicPost;\nexport const getStaticPaths = async () => {\n  const numberOfPosts = await countAllPosts();\n  const posts = await getAllPosts(`_limit=${numberOfPosts}`);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: true\n  };\n};\nexport const getStaticProps = async ctx => {\n  const posts = await getPost(ctx.params.slug);\n  const post = posts.length > 0 ? posts[0] : {};\n  return {\n    props: {\n      post: post\n    } // revalidate: 600,  // Eu não preciso atualizar este blog (por isso comentei)\n\n  };\n};","map":{"version":3,"sources":["/Users/adercidepaulajunior/Udemy/blog-clone/src/pages/post/[slug].tsx"],"names":["useRouter","Error","Post","countAllPosts","getAllPosts","getPost","DynamicPost","post","router","isFallback","title","getStaticPaths","numberOfPosts","posts","paths","map","params","slug","fallback","getStaticProps","ctx","length","props"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAOA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AAClD,QAAMC,MAAM,GAAGR,SAAS,EAAxB;;AAEA,MAAIQ,MAAM,CAACC,UAAX,EAAuB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAP;AACD;;AAED,MAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,KAAP,CAAJ,EAAkB;AAChB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAZD;;AAcA,eAAeD,WAAf;AAEA,OAAO,MAAMK,cAA8B,GAAG,YAAY;AACxD,QAAMC,aAAa,GAAG,MAAMT,aAAa,EAAzC;AACA,QAAMU,KAAK,GAAG,MAAMT,WAAW,CAAE,UAASQ,aAAc,EAAzB,CAA/B;AAEA,SAAO;AACLE,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAWR,IAAD,IAAU;AACzB,aAAO;AACLS,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEV,IAAI,CAACU;AADL;AADH,OAAP;AAKD,KANM,CADF;AAQLC,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD,CAdM;AAgBP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAMP,KAAK,GAAG,MAAMR,OAAO,CAACe,GAAG,CAACJ,MAAJ,CAAWC,IAAZ,CAA3B;AACA,QAAMV,IAAI,GAAGM,KAAK,CAACQ,MAAN,GAAe,CAAf,GAAmBR,KAAK,CAAC,CAAD,CAAxB,GAA8B,EAA3C;AAEA,SAAO;AACLS,IAAAA,KAAK,EAAE;AAAEf,MAAAA,IAAI,EAAEA;AAAR,KADF,CAEL;;AAFK,GAAP;AAID,CARM","sourcesContent":["import { useRouter } from 'next/router';\nimport Error from 'next/error';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { Post } from '../../containers/Post';\nimport { countAllPosts } from '../../data/posts/count-all-posts';\nimport { getAllPosts } from '../../data/posts/get-all-posts';\nimport { getPost } from '../../data/posts/get-post';\nimport { PostData } from '../../domain/posts/post';\n\nexport type DynamicPostProps = {\n  post: PostData;\n};\n\nconst DynamicPost = ({ post }: DynamicPostProps) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return <div>Página ainda carregando, por favor aguarde...</div>;\n  }\n\n  if (!post?.title) {\n    return <Error statusCode={404} />;\n  }\n\n  return <Post post={post} />;\n};\n\nexport default DynamicPost;\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const numberOfPosts = await countAllPosts();\n  const posts = await getAllPosts(`_limit=${numberOfPosts}`);\n\n  return {\n    paths: posts.map((post) => {\n      return {\n        params: {\n          slug: post.slug,\n        },\n      };\n    }),\n    fallback: true,\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const posts = await getPost(ctx.params.slug);\n  const post = posts.length > 0 ? posts[0] : {};\n\n  return {\n    props: { post: post },\n    // revalidate: 600,  // Eu não preciso atualizar este blog (por isso comentei)\n  };\n};\n"]},"metadata":{},"sourceType":"module"}